# Визначаємо наш бекенд-сервер як "upstream", щоб легко перевикористовувати його
upstream backend_server {
    # Nginx буде кешувати DNS-запис, що є добрим для продуктивності
    server thrume.onrender.com;
}

server {
    # Nginx буде слухати на порту 80 (або 8080, якщо ви запускаєте в Docker без root прав)
    listen 80;
    server_name your_domain.com localhost; # Замініть на ваше доменне ім'я або залиште localhost

    # Вказуємо шлях до зібраних файлів вашого Vue-проєкту
    root /usr/share/nginx/html; # Стандартний шлях для Docker, може бути іншим
    index index.html;

    # --- Блок для обслуговування статичних файлів і Vue-додатку (SPA) ---
    location / {
        # 1. Спробувати знайти файл, що точно відповідає URI ($uri)
        # 2. Спробувати знайти папку ($uri/)
        # 3. Якщо нічого не знайдено, повернути /index.html для обробки Vue Router'ом
        try_files $uri $uri/ /index.html;
    }

    # --- Блок для проксіювання WebSocket-з'єднання (SignalR Chat) ---
    location /chathub {
        proxy_pass https://backend_server; # Використовуємо наш upstream

        # Заголовки, необхідні для роботи WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Інші корисні заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Збільшуємо таймаути для довготривалих з'єднань
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # --- Блок для проксіювання WebSocket-з'єднання (SignalR Voice Call) ---
    location /voiceCallHub {
        proxy_pass https://backend_server;

        # Ті ж самі заголовки для WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # --- Блок для проксіювання стандартних API-запитів ---
    location /api/ {
        proxy_pass https://backend_server; # Використовуємо наш upstream

        # Стандартні заголовки для проксі
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Обробка помилок (опціонально, але гарна практика)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}